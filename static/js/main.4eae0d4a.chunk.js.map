{"version":3,"sources":["Components/SearchBox.js","Components/OrderBy.js","Components/FilteredAndSorted.js","Components/AddNewContact.js","Components/EditContact.js","Components/NavBar.js","App.js","serviceWorker.js","index.js"],"names":["SearchBox","_ref","filterContacts","react_default","a","createElement","className","type","onChange","OrderBy","handleEvent","event","_this","props","sortIt","target","value","this","id","name","Component","filteredAndSorted","contacts","search","direction","sortBy","deleteContact","contactDetail","editContact","key","phone_number","address","onClick","filteredAndSortedData","filter","toLowerCase","includes","map","sort","b","AddNewContact","Object","classCallCheck","possibleConstructorReturn","getPrototypeOf","call","setState","defineProperty","handleSubmit","preventDefault","addContact","state","reset","handleEdit","selectedContact","console","log","bind","assertThisInitialized","onSubmit","htmlFor","class","EditContact","handleInputChange","_this2","fetch","then","response","json","data","catch","error","EditWithThisValue","objectSpread","_this3","_this$props","_this$state","defaultValue","Navbar","NavLink","to","App","contact","toConsumableArray","concat","saveContact","form","BrowserRouter","NavBar","Switch","Route","exact","path","render","routeProps","Components_SearchBox","Components_OrderBy","FilteredAndSorted","filteredContacts","Components_AddNewContact","Components_EditContact","Boolean","window","location","hostname","match","ReactDOM","src_App_0","document","getElementById","navigator","serviceWorker","ready","registration","unregister"],"mappings":"iTAiBeA,SAdG,SAAAC,GAAsB,IAApBC,EAAoBD,EAApBC,eAElB,OACCC,EAAAC,EAAAC,cAAA,OAAKC,UAAU,cACfH,EAAAC,EAAAC,cAAA,MAAIC,UAAU,iBAAd,UACAH,EAAAC,EAAAC,cAAA,OAAKC,UAAU,YACfH,EAAAC,EAAAC,cAAA,SAAOE,KAAK,OAAOD,UAAU,eAAeE,SAAUN,KAEtDC,EAAAC,EAAAC,cAAA,cCWYI,oNAjBfC,YAAc,SAACC,GACdC,EAAKC,MAAMC,OAAOH,EAAMI,OAAOC,gFAI/B,OACEb,EAAAC,EAAAC,cAAA,OAAKC,UAAU,gBACZH,EAAAC,EAAAC,cAAA,UAAQG,SAAUS,KAAKP,YAAaJ,UAAU,eAAeY,GAAG,6BAChEf,EAAAC,EAAAC,cAAA,UAAQc,KAAK,YAAYH,MAAM,aAA/B,iBACAb,EAAAC,EAAAC,cAAA,UAAQc,KAAK,YAAYH,MAAM,aAA/B,aACAb,EAAAC,EAAAC,cAAA,UAAQc,KAAK,aAAaH,MAAM,cAAhC,uBAZgBI,cC6DPC,SA9DW,SAAApB,GAA+E,IAA7EqB,EAA6ErB,EAA7EqB,SAAUC,EAAmEtB,EAAnEsB,OAAwBC,GAA2CvB,EAA3Da,OAA2Db,EAAnDwB,OAAmDxB,EAA3CuB,WAAWE,EAAgCzB,EAAhCyB,cAE/DC,GAF+F1B,EAAjB2B,YAE9D,SAACN,GAAD,OAClBnB,EAAAC,EAAAC,cAAA,MAAIC,UAAU,gBAAgBuB,IAAKP,EAASH,MAC5ChB,EAAAC,EAAAC,cAAA,mBAAWiB,EAASH,MACpBhB,EAAAC,EAAAC,cAAA,oBAAYiB,EAASQ,cACrB3B,EAAAC,EAAAC,cAAA,sBAAciB,EAASS,SACvB5B,EAAAC,EAAAC,cAAA,iBAASiB,EAASH,MAClBhB,EAAAC,EAAAC,cAAA,UAAQE,KAAK,SAASD,UAAU,gBAAgB0B,QAAS,kBAAMN,EAAcJ,EAASH,QAAtF,UACAhB,EAAAC,EAAAC,cAAA,cAGJ,GAAkB,cAAdmB,EAA2B,CAC/B,IAAIS,EAAwBX,EAASY,OACrC,SAAAZ,GACA,OAAOA,EAASH,KAAKgB,cAAcC,SAASb,EAAOY,gBACnDb,EAASS,QAAQI,cAAcC,SAASb,EAAOY,gBAC/Cb,EAASQ,aAAaM,SAASb,KAE3B,OACIpB,EAAAC,EAAAC,cAAA,WACC4B,EAAsBI,IAAIV,IAK9B,GAAiB,cAAdH,EAA2B,CAC/B,IAAIS,EACRX,EACCgB,KAAK,SAAClC,EAAGmC,GAAQ,OAAGnC,EAAEe,KAAOoB,EAAEpB,MAAgB,EAAQf,EAAEe,KAAOoB,EAAEpB,KAAe,EAAY,IAC7Fe,OACD,SAAAZ,GACA,OAAOA,EAASH,KAAKgB,cAAcC,SAASb,EAAOY,gBACnDb,EAASS,QAAQI,cAAcC,SAASb,EAAOY,gBAC/Cb,EAASQ,aAAaM,SAASb,KAE3B,OACIpB,EAAAC,EAAAC,cAAA,WACC4B,EAAsBI,IAAIV,IAK9B,GAAiB,eAAdH,EAA4B,CAChC,IAAIS,EACRX,EACCgB,KAAK,SAAClC,EAAGmC,GAAQ,OAAGnC,EAAEe,KAAOoB,EAAEpB,MAAgB,EAAQf,EAAEe,KAAOoB,EAAEpB,KAAe,EAAY,IAC7Fe,OACD,SAAAZ,GACA,OAAOA,EAASH,KAAKgB,cAAcC,SAASb,EAAOY,gBACnDb,EAASS,QAAQI,cAAcC,SAASb,EAAOY,gBAC/Cb,EAASQ,aAAaM,SAASb,KAE3B,OACIpB,EAAAC,EAAAC,cAAA,WACC4B,EAAsBI,IAAIV,sBCgBxBa,cAtEd,SAAAA,IAAc,IAAA5B,EAAA,OAAA6B,OAAAC,EAAA,EAAAD,CAAAxB,KAAAuB,IACb5B,EAAA6B,OAAAE,EAAA,EAAAF,CAAAxB,KAAAwB,OAAAG,EAAA,EAAAH,CAAAD,GAAAK,KAAA5B,QASDT,SAAW,SAACG,GACXC,EAAKkC,SAALL,OAAAM,EAAA,EAAAN,CAAA,GACE9B,EAAMI,OAAOG,GAAMP,EAAMI,OAAOC,SAZrBJ,EAgBdoC,aAAe,SAACrC,GACfA,EAAMsC,iBACNrC,EAAKC,MAAMqC,WAAWtC,EAAKuC,OAC3BxC,EAAMI,OAAOqC,SAnBAxC,EAsBdyC,WAAa,SAAC1C,GACb,GAAoC,OAAhCC,EAAKC,MAAMyC,gBAA6B,CAC5C,IACMnC,EADeP,EAAKC,MAAMyC,gBAAgB,GACtBnC,KAC1BP,EAAKkC,SAAU,CAAE3B,KAAMA,SAItBoC,QAAQC,IAAI,SA5Bb5C,EAAKuC,MAAQ,CACZhC,KAAM,KACNW,aAAc,KACdC,QAAS,MAEVnB,EAAKyC,WAAazC,EAAKyC,WAAWI,KAAhBhB,OAAAiB,EAAA,EAAAjB,QAAAiB,EAAA,EAAAjB,CAAA7B,KAPLA,wEAoCYK,KAAKJ,MAAxByC,gBACP,OACAnD,EAAAC,EAAAC,cAAA,OAAKC,UAAU,qBACfH,EAAAC,EAAAC,cAAA,6BACAF,EAAAC,EAAAC,cAAA,QAAMsD,SAAU1C,KAAK+B,cACpB7C,EAAAC,EAAAC,cAAA,OAAKC,UAAU,cACbH,EAAAC,EAAAC,cAAA,SAAOuD,QAAQ,qBAAqBtD,UAAU,wBAA9C,QACAH,EAAAC,EAAAC,cAAA,OAAKC,UAAU,UACfH,EAAAC,EAAAC,cAAA,SAAOC,UAAU,eAAeC,KAAK,OAAOC,SAAUS,KAAKT,SAAUU,GAAG,WAG1Ef,EAAAC,EAAAC,cAAA,OAAKC,UAAU,cACbH,EAAAC,EAAAC,cAAA,SAAOuD,QAAQ,oBAAoBtD,UAAU,wBAA7C,aACAH,EAAAC,EAAAC,cAAA,OAAKC,UAAU,UACbH,EAAAC,EAAAC,cAAA,SAAOC,UAAU,eAAeC,KAAK,OAAOC,SAAUS,KAAKT,SAAUU,GAAG,mBAG5Ef,EAAAC,EAAAC,cAAA,OAAKwD,MAAM,cACT1D,EAAAC,EAAAC,cAAA,SAAOuD,QAAQ,qBAAqBC,MAAM,wBAA1C,WACA1D,EAAAC,EAAAC,cAAA,OAAKC,UAAU,UACbH,EAAAC,EAAAC,cAAA,SAAOC,UAAU,eAAeC,KAAK,OAAOC,SAAUS,KAAKT,SAAUU,GAAG,cAG5Ef,EAAAC,EAAAC,cAAA,UAAQE,KAAK,SAASsD,MAAM,mBAA5B,gBA5D0BzC,qBC0Gb0C,cAvGd,SAAAA,EAAYjD,GAAO,IAAAD,EAAA,OAAA6B,OAAAC,EAAA,EAAAD,CAAAxB,KAAA6C,IAClBlD,EAAA6B,OAAAE,EAAA,EAAAF,CAAAxB,KAAAwB,OAAAG,EAAA,EAAAH,CAAAqB,GAAAjB,KAAA5B,KAAMJ,KA6BPkD,kBAAoB,SAACpD,GAClB,IAAMI,EAASJ,EAAMI,OACfC,EAAQD,EAAOC,MACfG,EAAOJ,EAAOI,KACpBP,EAAKkC,SAALL,OAAAM,EAAA,EAAAN,CAAA,GACEtB,EAAOH,IAETuC,QAAQC,IAAI5C,EAAKuC,QAnCnBvC,EAAKuC,MAAQ,CACZ7B,SAAU,IAEXV,EAAK+C,SAAW/C,EAAK+C,SAASF,KAAdhB,OAAAiB,EAAA,EAAAjB,QAAAiB,EAAA,EAAAjB,CAAA7B,KAChBA,EAAKmD,kBAAoBnD,EAAKmD,kBAAkBN,KAAvBhB,OAAAiB,EAAA,EAAAjB,QAAAiB,EAAA,EAAAjB,CAAA7B,KANPA,mFASC,IAAAoD,EAAA/C,KACfgD,MAdM,oDAeLC,KAAK,SAAAC,GAAQ,OAAIA,EAASC,SAC1BF,KAAK,SAAAG,GAAI,OAAIL,EAAKlB,SAAS,CAAExB,SAAU+C,EAAK/C,aAC5CgD,MAAM,SAAAC,GAAK,OAAIhB,QAAQC,IAAIe,wCAIhCtD,KAAKW,YAAYX,KAAKkC,2CAIXqB,GACZ,IACUlD,EAAaL,KAAKkC,MAAlB7B,SACImB,OAAAgC,EAAA,EAAAhC,CAAA,GACVnB,oCAeK,IAAAoD,EAAAzD,KAAA0D,EACgE1D,KAAKJ,MAAtEU,EADCoD,EACDpD,OAAwBC,GADvBmD,EACO7D,OADP6D,EACelD,OADfkD,EACuBnD,WADvBoD,GAAAD,EACkCjD,cADlCiD,EACiD/C,YACjCX,KAAKkC,OAAjB7B,GAFJsD,EAEFzD,KAFEyD,EAEItD,UACJK,EAAgB,SAACL,GAAD,OAClBnB,EAAAC,EAAAC,cAAA,MAAIC,UAAU,gBAAgBuB,IAAKP,EAASH,MAC5ChB,EAAAC,EAAAC,cAAA,mBAAUF,EAAAC,EAAAC,cAAA,SAAOc,KAAK,OAAOD,GAAG,OAAOV,SAAUkE,EAAKX,kBAAmBc,aAAcvD,EAASH,QAChGhB,EAAAC,EAAAC,cAAA,oBAAWF,EAAAC,EAAAC,cAAA,SAAOc,KAAK,eAAeD,GAAG,eAAeV,SAAUkE,EAAKX,kBAAmBc,aAAcvD,EAASQ,gBACjH3B,EAAAC,EAAAC,cAAA,sBAAaF,EAAAC,EAAAC,cAAA,SAAOc,KAAK,UAAUD,GAAG,UAAUV,SAAUkE,EAAKX,kBAAmBc,aAAcvD,EAASS,WACzG5B,EAAAC,EAAAC,cAAA,UAAQE,KAAK,SAASD,UAAU,gBAAgB0B,QAAS,kBAAM0C,EAAKf,aAApE,QACAxD,EAAAC,EAAAC,cAAA,aAGJ,GAAkB,cAAdmB,EAA2B,CAC/B,IAAIS,EAAwBX,EAASY,OACrC,SAAAZ,GACA,OAAOA,EAASH,KAAKgB,cAAcC,SAASb,EAAOY,gBACnDb,EAASS,QAAQI,cAAcC,SAASb,EAAOY,gBAC/Cb,EAASQ,aAAaM,SAASb,KAE3B,OACIpB,EAAAC,EAAAC,cAAA,WACC4B,EAAsBI,IAAIV,IAK9B,GAAiB,cAAdH,EAA2B,CAC/B,IAAIS,EACRX,EACCgB,KAAK,SAAClC,EAAGmC,GAAQ,OAAGnC,EAAEe,KAAOoB,EAAEpB,MAAgB,EAAQf,EAAEe,KAAOoB,EAAEpB,KAAe,EAAY,IAC7Fe,OACD,SAAAZ,GACA,OAAOA,EAASH,KAAKgB,cAAcC,SAASb,EAAOY,gBACnDb,EAASS,QAAQI,cAAcC,SAASb,EAAOY,gBAC/Cb,EAASQ,aAAaM,SAASb,KAE3B,OACIpB,EAAAC,EAAAC,cAAA,WACC4B,EAAsBI,IAAIV,IAK9B,GAAiB,eAAdH,EAA4B,CAChC,IAAIS,EACRX,EACCgB,KAAK,SAAClC,EAAGmC,GAAQ,OAAGnC,EAAEe,KAAOoB,EAAEpB,MAAgB,EAAQf,EAAEe,KAAOoB,EAAEpB,KAAe,EAAY,IAC7Fe,OACD,SAAAZ,GACA,OAAOA,EAASH,KAAKgB,cAAcC,SAASb,EAAOY,gBACnDb,EAASS,QAAQI,cAAcC,SAASb,EAAOY,gBAC/Cb,EAASQ,aAAaM,SAASb,KAE3B,OACIpB,EAAAC,EAAAC,cAAA,WACC4B,EAAsBI,IAAIV,YAjGbP,qBCuBX0D,EAvBA,WACd,OACA3E,EAAAC,EAAAC,cAAA,WACCF,EAAAC,EAAAC,cAAA,OAAKC,UAAU,iDAEZH,EAAAC,EAAAC,cAAA,MAAIC,UAAU,6BACZH,EAAAC,EAAAC,cAAA,MAAIC,UAAU,YACZH,EAAAC,EAAAC,cAAC0E,EAAA,EAAD,CAASC,GAAG,IAAI1E,UAAU,YAA1B,WAEFH,EAAAC,EAAAC,cAAA,MAAIC,UAAU,YACZH,EAAAC,EAAAC,cAAC0E,EAAA,EAAD,CAASC,GAAG,OAAO1E,UAAU,YAA7B,QAEFH,EAAAC,EAAAC,cAAA,MAAIC,UAAU,YACZH,EAAAC,EAAAC,cAAC0E,EAAA,EAAD,CAASC,GAAG,QAAQ1E,UAAU,YAA9B,qCCuGM2E,cA1Gb,SAAAA,EAAapE,GAAO,IAAAD,EAAA,OAAA6B,OAAAC,EAAA,EAAAD,CAAAxB,KAAAgE,IAClBrE,EAAA6B,OAAAE,EAAA,EAAAF,CAAAxB,KAAAwB,OAAAG,EAAA,EAAAH,CAAAwC,GAAApC,KAAA5B,KAAMJ,KAmBRX,eAAiB,SAACS,GACGC,EAAKuC,MAAjB7B,SACPV,EAAKkC,SAAS,CAAEvB,OAAQZ,EAAMI,OAAOC,SAtBnBJ,EAyBpBE,OAAS,SAACU,GACW,cAAfA,EACJZ,EAAKkC,SAAU,CAACtB,UAAW,cAEH,eAAfA,EACTZ,EAAKkC,SAAU,CAACtB,UAAW,eAG3BZ,EAAKkC,SAAS,CAACtB,UAAW,eAjCRZ,EAqCpBsC,WAAa,SAACgC,GACZ,IAAI5D,EAAQmB,OAAA0C,EAAA,EAAA1C,CAAO7B,EAAKuC,MAAM7B,UAAlB8D,OAAA,CAA4BF,IACxCtE,EAAKkC,SAAU,CACbxB,SAAUA,KAxCMV,EA4CpBc,cAAgB,SAACR,GACf,IAAII,EAAWV,EAAKuC,MAAM7B,SAASY,OAAO,SAAAgD,GACxC,OAAOA,EAAQ/D,OAASD,IAE1BN,EAAKkC,SAAS,CACZxB,SAAUA,KAjDMV,EAsDpBgB,YAAc,SAACZ,GACEJ,EAAKuC,MAAM7B,SAASY,OAAO,SAAAgD,GACzC3B,QAAQC,IAAI0B,EAAQ/D,OAASH,KAE9BuC,QAAQC,IAAIxC,IA1DMJ,EA8DpByE,YAAc,SAAClE,GACboC,QAAQC,IAAIrC,IA7DZP,EAAKuC,MAAQ,CACb5B,OAAQ,GACRD,SAAU,GACVH,KAAM,GACNW,aAAc,GACdC,QAAS,GACTP,UAAW,YACX8D,KAAM,OATY1E,mFAaA,IAAAoD,EAAA/C,KAClBgD,MAlBQ,oDAmBLC,KAAK,SAAAC,GAAQ,OAAIA,EAASC,SAC1BF,KAAK,SAAAG,GAAI,OAAIL,EAAKlB,SAAS,CAAExB,SAAU+C,EAAK/C,aAC5CgD,MAAM,SAAAC,GAAK,OAAIhB,QAAQC,IAAIe,sCAiDrB,IAAAG,EAAAzD,KAAA2D,EAC6B3D,KAAKkC,MAApC7B,EADEsD,EACFtD,SAAUC,EADRqD,EACQrD,OAAQC,EADhBoD,EACgBpD,UACzB,OACErB,EAAAC,EAAAC,cAACkF,EAAA,EAAD,KACApF,EAAAC,EAAAC,cAAA,OAAKC,UAAU,OACfH,EAAAC,EAAAC,cAACmF,EAAD,MACIrF,EAAAC,EAAAC,cAAA,uBACAF,EAAAC,EAAAC,cAAA,OAAKC,UAAU,aACVH,EAAAC,EAAAC,cAACoF,EAAA,EAAD,KACAtF,EAAAC,EAAAC,cAACqF,EAAA,EAAD,CAAOC,OAAK,EAACC,KAAK,IAAIC,OAAQ,SAACC,GAAD,OAC7B3F,EAAAC,EAAAC,cAAA,WACAF,EAAAC,EAAAC,cAAC0F,EAAD,CAAW7F,eAAgBwE,EAAKxE,iBAChCC,EAAAC,EAAAC,cAAC2F,EAAD,CAASlF,OAAQ4D,EAAK5D,SACtBX,EAAAC,EAAAC,cAAC4F,EAAD,CAAmB3E,SAAUA,EAAUC,OAAQA,EAAQG,cAAegD,EAAKhD,cAAeZ,OAAQ4D,EAAK5D,OACrGU,UAAWA,EAAW0E,iBAAkBxB,EAAKvB,MAAM+C,iBAAkBtE,YAAa8C,EAAK9C,mBAIzFzB,EAAAC,EAAAC,cAACoF,EAAA,EAAD,KACEtF,EAAAC,EAAAC,cAACqF,EAAA,EAAD,CAAOC,OAAK,EAACC,KAAK,OAAOC,OAAQ,SAACC,GAAD,OAAiB3F,EAAAC,EAAAC,cAAC8F,EAAD,CAAejD,WAAYwB,EAAKxB,WAAYtB,YAAa8C,EAAK9C,YAAcsD,QAASR,EAAKvB,MAAM7B,eAEpJnB,EAAAC,EAAAC,cAACoF,EAAA,EAAD,KACEtF,EAAAC,EAAAC,cAACqF,EAAA,EAAD,CAAOC,OAAK,EAACC,KAAK,QAAQC,OAAQ,SAACC,GAAD,OAClC3F,EAAAC,EAAAC,cAAA,WACAF,EAAAC,EAAAC,cAAC0F,EAAD,CAAW7F,eAAgBwE,EAAKxE,iBAChCC,EAAAC,EAAAC,cAAC+F,EAAD,CAAa9E,SAAUA,EAAUC,OAAQA,EAAQG,cAAegD,EAAKhD,cAAeZ,OAAQ4D,EAAK5D,OACjGU,UAAWA,EAAW0E,iBAAkBxB,EAAKvB,MAAM+C,iBAAkBtE,YAAa8C,EAAK9C,6BA9FvFR,aCCEiF,QACW,cAA7BC,OAAOC,SAASC,UAEe,UAA7BF,OAAOC,SAASC,UAEhBF,OAAOC,SAASC,SAASC,MACvB,2DCZNC,IAASb,OAAO1F,EAAAC,EAAAC,cAACsG,EAAD,MAASC,SAASC,eAAe,SD2H3C,kBAAmBC,WACrBA,UAAUC,cAAcC,MAAM9C,KAAK,SAAA+C,GACjCA,EAAaC","file":"static/js/main.4eae0d4a.chunk.js","sourcesContent":["import React from 'react';\r\nimport '../css/SearchBox.css';\r\n\r\nconst SearchBox = ({filterContacts}) => {\r\n\r\n\t\treturn (\r\n\t\t\t<div className=\"search_box\">\r\n\t\t\t<h3 className=\"gradient_text\">Search</h3>\r\n\t\t\t<div className=\"dropdown\">\r\n\t\t\t<input type=\"text\" className=\"search_field\" onChange={filterContacts}></input>\r\n\t\t\t</div>\r\n\t\t\t<br />\r\n\t\t\t</div>\r\n\t\t\t);\r\n\t}\r\n\r\n\r\nexport default SearchBox;","import React, {Component} from 'react';\r\nimport '../css/OrderBy.css';\r\n\r\nclass OrderBy extends Component {\r\n\r\nhandleEvent = (event) => {\r\n\tthis.props.sortIt(event.target.value);\r\n}\r\n\r\nrender(){\r\n\treturn (\r\n\t\t\t<div className=\"sorting_menu\">\r\n\t\t    <select onChange={this.handleEvent} className=\"form-control\" id=\"exampleFormControlSelect1\">\r\n\t\t    <option name=\"notsorted\" value=\"notsorted\">Please select</option>\r\n\t\t    <option name=\"Ascending\" value=\"Ascending\">Ascending</option>\r\n\t\t    <option name=\"Descending\" value=\"Descending\">Descending</option>\r\n\t\t    </select>\t\r\n\t\t\t</div>\r\n\t\t\t);\r\n\t\t}\t\t\r\n\t}\r\n\r\nexport default OrderBy;","import React from 'react';\r\n\r\nconst filteredAndSorted = ({contacts, search, sortIt, sortBy, direction, deleteContact, editContact}) => {\r\n\r\n    const contactDetail = (contacts) =>\r\n        <ul className=\"gradient_text\" key={contacts.name}>\r\n        <li>Name: {contacts.name}</li>\r\n        <li>Phone: {contacts.phone_number}</li>\r\n        <li>Address: {contacts.address}</li>\r\n        <li>Id: {contacts.name}</li>\r\n        <button type=\"button\" className=\"btn btn-light\" onClick={() => deleteContact(contacts.name)}>delete</button>\r\n        <hr />\r\n        </ul>\r\n    \r\n    if (direction === 'notsorted') {\r\n    let filteredAndSortedData = contacts.filter(\r\n    contacts => {\r\n    return contacts.name.toLowerCase().includes(search.toLowerCase()) ||\r\n    contacts.address.toLowerCase().includes(search.toLowerCase()) ||\r\n    contacts.phone_number.includes(search);\r\n    })\r\n        return (\r\n            <div>\r\n            {filteredAndSortedData.map(contactDetail)}    \r\n            </div>\r\n            );\r\n    \r\n    }\r\n    else if(direction === 'Ascending') {\r\n        let filteredAndSortedData = \r\n    contacts\r\n    .sort((a, b) => { if(a.name < b.name) { return -1; } if(a.name > b.name) { return 1; } return 0; })\r\n    .filter(\r\n    contacts => {\r\n    return contacts.name.toLowerCase().includes(search.toLowerCase()) ||\r\n    contacts.address.toLowerCase().includes(search.toLowerCase()) ||\r\n    contacts.phone_number.includes(search);\r\n    })\r\n        return (\r\n            <div>\r\n            {filteredAndSortedData.map(contactDetail)}    \r\n            </div>\r\n        );\r\n    }\r\n\r\n    else if(direction === 'Descending') {\r\n        let filteredAndSortedData = \r\n    contacts\r\n    .sort((a, b) => { if(a.name > b.name) { return -1; } if(a.name < b.name) { return 1; } return 0; })\r\n    .filter(\r\n    contacts => {\r\n    return contacts.name.toLowerCase().includes(search.toLowerCase()) ||\r\n    contacts.address.toLowerCase().includes(search.toLowerCase()) ||\r\n    contacts.phone_number.includes(search);\r\n    })\r\n        return (\r\n            <div>\r\n            {filteredAndSortedData.map(contactDetail)}    \r\n            </div>\r\n        );\r\n    }\r\n\r\n}\r\n\r\nexport default filteredAndSorted;","import React, {Component} from 'react';\r\n\r\nclass AddNewContact extends Component {\r\n\tconstructor() {\r\n\t\tsuper();\r\n\t\tthis.state = {\r\n\t\t\tname: null,\r\n\t\t\tphone_number: null,\r\n\t\t\taddress: null\r\n\t\t}\r\n\t\tthis.handleEdit = this.handleEdit.bind(this);\r\n\t}\r\n\r\n\tonChange = (event) => {\r\n\t\tthis.setState ({\r\n\t\t\t[event.target.id] : event.target.value\r\n\t\t})\r\n\t}\r\n\r\n\thandleSubmit = (event) => {\r\n\t\tevent.preventDefault();\r\n\t\tthis.props.addContact(this.state);\r\n\t\tevent.target.reset();\r\n\t}\r\n\r\n\thandleEdit = (event) => {\r\n\t\tif((this.props.selectedContact) !== null )  {\r\n\t\tconst selectedName = this.props.selectedContact[0];\r\n\t\tconst name = selectedName.name;\r\n\t\tthis.setState ({ name: name \r\n\t\t})\r\n\t\t}\r\n\t\telse {\r\n\t\t\tconsole.log('null');\r\n\t\t}\r\n\r\n\t}\r\n\r\n\trender() {\r\n\tconst {selectedContact} = this.props;\r\n\treturn (\r\n\t<div className=\"addNewContactForm\">\r\n\t<h3>ADD NEW CONTACT</h3>\r\n\t<form onSubmit={this.handleSubmit}>\r\n\t\t<div className=\"form-group\">\r\n\t\t  <label htmlFor=\"example-text-input\" className=\"col-2 col-form-label\">Name</label>\r\n\t\t  <div className=\"col-10\">\r\n\t\t  <input className=\"form-control\" type=\"text\" onChange={this.onChange} id=\"name\" />\r\n\t\t  </div>\r\n\t\t</div>\r\n\t\t<div className=\"form-group\">\r\n\t\t  <label htmlFor=\"example-tel-input\" className=\"col-2 col-form-label\">Telephone</label>\r\n\t\t  <div className=\"col-10\">\r\n\t\t    <input className=\"form-control\" type=\"text\" onChange={this.onChange} id=\"phone_number\" />\r\n\t\t  </div>\r\n\t\t</div>\r\n\t\t<div class=\"form-group\">\r\n\t\t  <label htmlFor=\"example-text-input\" class=\"col-2 col-form-label\">Address</label>\r\n\t\t  <div className=\"col-10\">\r\n\t\t    <input className=\"form-control\" type=\"text\" onChange={this.onChange} id=\"address\" />\r\n\t\t  </div>\r\n\t\t</div>\r\n\t\t<button type=\"submit\" class=\"btn btn-primary\">Add</button>\r\n\r\n\t\t{/*{console.log(selectedContact[0])}*/}\r\n\t</form>\r\n\t</div>\r\n\r\n\r\n\t\t);\r\n\t}\r\n}\r\n\r\nexport default AddNewContact;","import React, {Component} from 'react';\r\nconst API = \"https://www.mocky.io/v2/581335f71000004204abaf83\";\r\n\r\nclass EditContact extends Component {\r\n\r\n\tconstructor(props) {\r\n\t\tsuper(props);\r\n\t\tthis.state = {\r\n\t\t\tcontacts: [],\r\n\t\t}\r\n\t\tthis.onSubmit = this.onSubmit.bind(this);\r\n\t\tthis.handleInputChange = this.handleInputChange.bind(this);\r\n\t}\r\n\r\n\tcomponentDidMount() {\r\n      fetch(API)\r\n      .then(response => response.json())\r\n      .then(data => this.setState({ contacts: data.contacts }))\r\n      .catch(error => console.log(error));\r\n    }  \r\n\r\n    onSubmit() {\r\n\t\tthis.editContact(this.state);\r\n\t\t//am I thinking right?\r\n\t}\r\n\r\n\teditContact(EditWithThisValue)\r\n\t{\r\n\t\tconst  { contacts } = this.state;\r\n\t\tconst updated = {\r\n\t\t...contacts, \r\n\t\t//what goes here\r\n\t\t}\r\n  \t}\r\n\r\n\thandleInputChange = (event) => {\r\n    const target = event.target;\r\n    const value = target.value;\r\n    const name = target.name;\r\n    this.setState({\r\n    \t[name]: value\r\n    });\r\n    console.log(this.state);\r\n  }\r\n\r\n\trender() {\r\n\tconst { search, sortIt, sortBy, direction, deleteContact, editContact} = this.props;\r\n\tconst {name, contacts} = this.state;\r\n    const contactDetail = (contacts) =>\r\n        <ul className=\"gradient_text\" key={contacts.name}>\r\n        <li>Name: <input name=\"name\" id=\"name\" onChange={this.handleInputChange} defaultValue={contacts.name}/></li>\r\n        <li>Phone: <input name=\"phone_number\" id=\"phone_number\" onChange={this.handleInputChange} defaultValue={contacts.phone_number}/></li>\r\n        <li>Address: <input name=\"address\" id=\"address\" onChange={this.handleInputChange} defaultValue={contacts.address}/></li>\r\n        <button type=\"button\" className=\"btn btn-light\" onClick={() => this.onSubmit()}>Save</button>\r\n        <hr />\r\n        </ul>\r\n    \r\n    if (direction === 'notsorted') {\r\n    let filteredAndSortedData = contacts.filter(\r\n    contacts => {\r\n    return contacts.name.toLowerCase().includes(search.toLowerCase()) ||\r\n    contacts.address.toLowerCase().includes(search.toLowerCase()) ||\r\n    contacts.phone_number.includes(search);\r\n    })\r\n        return (\r\n            <div>\r\n            {filteredAndSortedData.map(contactDetail)}    \r\n            </div>\r\n            );\r\n    \r\n    }\r\n    else if(direction === 'Ascending') {\r\n        let filteredAndSortedData = \r\n    contacts\r\n    .sort((a, b) => { if(a.name < b.name) { return -1; } if(a.name > b.name) { return 1; } return 0; })\r\n    .filter(\r\n    contacts => {\r\n    return contacts.name.toLowerCase().includes(search.toLowerCase()) ||\r\n    contacts.address.toLowerCase().includes(search.toLowerCase()) ||\r\n    contacts.phone_number.includes(search);\r\n    })\r\n        return (\r\n            <div>\r\n            {filteredAndSortedData.map(contactDetail)}    \r\n            </div>\r\n        );\r\n    }\r\n\r\n    else if(direction === 'Descending') {\r\n        let filteredAndSortedData = \r\n    contacts\r\n    .sort((a, b) => { if(a.name > b.name) { return -1; } if(a.name < b.name) { return 1; } return 0; })\r\n    .filter(\r\n    contacts => {\r\n    return contacts.name.toLowerCase().includes(search.toLowerCase()) ||\r\n    contacts.address.toLowerCase().includes(search.toLowerCase()) ||\r\n    contacts.phone_number.includes(search);\r\n    })\r\n        return (\r\n            <div>\r\n            {filteredAndSortedData.map(contactDetail)}    \r\n            </div>\r\n        );\r\n    \t}\r\n\t}\r\n}\r\n\r\n\r\nexport default EditContact;\r\n\t","import React from 'react';\r\nimport { NavLink } from 'react-router-dom';\r\n\r\nconst Navbar = () => {\r\n\treturn (\r\n\t<div>\r\n\t\t<nav className=\"navbar navbar-expand-lg navbar-light bg-light\">\r\n\t  \t\r\n\t    <ul className=\"navbar-nav mr-auto center\">\r\n\t      <li className=\"nav-item\">\r\n\t        <NavLink to=\"/\" className=\"nav-link\">Browse</NavLink>\r\n\t      </li>\r\n\t      <li className=\"nav-item\">\r\n\t        <NavLink to=\"/add\" className=\"nav-link\">Add</NavLink>\r\n\t      </li>\r\n\t      <li className=\"nav-item\">\r\n\t        <NavLink to=\"/edit\" className=\"nav-link\">Edit</NavLink>\r\n\t      </li>\r\n\t    </ul>\r\n\t \t \r\n\t\t</nav>\r\n\t</div> \r\n\t);\r\n\t\r\n}\r\n\r\nexport default Navbar;","import React, { Component } from 'react';\nimport SearchBox from './Components/SearchBox';\nimport OrderBy from './Components/OrderBy';\nimport './App.css';\nimport FilteredAndSorted from './Components/FilteredAndSorted';\nimport AddNewContact from './Components/AddNewContact';\nimport EditContact from './Components/EditContact';\nimport NavBar from './Components/NavBar';\nimport { BrowserRouter, Route, Switch} from 'react-router-dom';\nconst API = \"https://www.mocky.io/v2/581335f71000004204abaf83\";\n\nclass App extends Component {\n\n  constructor (props) {\n    super(props);\n    this.state = {\n    search: '',\n    contacts: [],\n    name: '',\n    phone_number: '',\n    address: '',\n    direction: 'notsorted',\n    form: 'add'\n  }\n}\n\n  componentDidMount() {\n    fetch(API)\n      .then(response => response.json())\n      .then(data => this.setState({ contacts: data.contacts }))\n      .catch(error => console.log(error));\n    }  \n\n  filterContacts = (event) => {\n    const {contacts} = this.state;\n    this.setState({ search: event.target.value });\n  }\n\n  sortIt = (direction) => {\n   if ((direction) === 'Ascending') {\n    this.setState ({direction: 'Ascending'})\n   }\n   else if ((direction) === 'Descending') {\n    this.setState ({direction: 'Descending'})\n   }\n   else {\n    this.setState({direction: 'notsorted'})\n   }\n  }\n\n  addContact = (contact) => {\n    let contacts = [...this.state.contacts, contact];\n    this.setState ({\n      contacts: contacts\n    })\n  }\n\n  deleteContact = (id) => {\n    let contacts = this.state.contacts.filter(contact => {\n      return contact.name !== id\n    });\n    this.setState({\n      contacts: contacts\n    })\n\n  }\n\n  editContact = (value) => {\n    let contacts = this.state.contacts.filter(contact => {\n     console.log(contact.name !== value)\n    });\n    console.log(value);\n\n  }\n\n  saveContact = (name) => {\n    console.log(name);\n  }\n\n    render() {\n    const {contacts, search, direction} = this.state;\n    return (\n      <BrowserRouter>\n      <div className=\"App\">\n      <NavBar />\n          <h1>Phonebook</h1>\n          <div className=\"container\">\n               <Switch>\n               <Route exact path='/' render={(routeProps) => (\n                <div>\n                <SearchBox filterContacts={this.filterContacts}/>\n                <OrderBy sortIt={this.sortIt}/>\n                <FilteredAndSorted contacts={contacts} search={search} deleteContact={this.deleteContact} sortIt={this.sortIt}\n                  direction={direction} filteredContacts={this.state.filteredContacts} editContact={this.editContact}/>\n                </div>\n                   )} />\n                </Switch>\n                <Switch>\n                  <Route exact path='/add' render={(routeProps) => (<AddNewContact addContact={this.addContact} editContact={this.editContact}  contact={this.state.contacts}/> )} />\n                </Switch>\n                <Switch>\n                  <Route exact path='/edit' render={(routeProps) => (\n                  <div>\n                  <SearchBox filterContacts={this.filterContacts}/>\n                  <EditContact contacts={contacts} search={search} deleteContact={this.deleteContact} sortIt={this.sortIt}\n                  direction={direction} filteredContacts={this.state.filteredContacts} editContact={this.editContact}/>\n                  \n                  </div> )} />\n                  \n                </Switch>\n                         \n          </div>       \n       \n      </div>\n      </BrowserRouter>\n    );\n  }\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read http://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit http://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See http://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: http://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}