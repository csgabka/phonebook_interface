{"version":3,"sources":["Components/SearchBox.js","Components/OrderBy.js","Components/ListData.js","Components/FilteredAndSorted.js","App.js","serviceWorker.js","index.js"],"names":["SearchBox","_ref","filterContacts","react_default","a","createElement","className","type","onChange","OrderBy","handleEvent","event","_this","props","sortIt","target","value","this","id","name","Component","listData","contacts","search","filteredData","filter","toLowerCase","includes","address","phone_number","map","key","filteredAndSorted","direction","sortBy","filteredAndSortedData","sort","b","App","Object","classCallCheck","possibleConstructorReturn","getPrototypeOf","call","state","setState","_this2","fetch","then","response","json","data","catch","error","console","log","_this$state","Components_OrderBy","ListData","FilteredAndSorted","Components_SearchBox","Boolean","window","location","hostname","match","ReactDOM","render","src_App_0","document","getElementById","navigator","serviceWorker","ready","registration","unregister"],"mappings":"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","file":"static/js/main.75ff9789.chunk.js","sourcesContent":["import React from 'react';\r\nimport '../css/SearchBox.css';\r\n\r\nconst SearchBox = ({filterContacts}) => {\r\n\r\n\t\treturn (\r\n\t\t\t<div className=\"search_box\">\r\n\t\t\t<h3 className=\"gradient_text\">Search</h3>\r\n\t\t\t<div className=\"dropdown\">\r\n\t\t\t<input type=\"text\" className=\"search_field\" onChange={filterContacts}></input>\r\n\t\t\t</div>\r\n\t\t\t<br />\r\n\t\t\t</div>\r\n\t\t\t);\r\n\t}\r\n\r\n\r\nexport default SearchBox;","import React, {Component} from 'react';\r\nimport '../css/OrderBy.css';\r\n\r\nclass OrderBy extends Component {\r\n\r\nhandleEvent = (event) => {\r\n\tthis.props.sortIt(event.target.value);\r\n}\r\n\r\nrender(){\r\n\treturn (\r\n\t\t\t<div className=\"sorting_menu\">\r\n\t\t\t<label>Please sort your data</label>\r\n\t\t    <select onChange={this.handleEvent} className=\"form-control\" id=\"exampleFormControlSelect1\">\r\n\t\t    <option name=\"notsorted\" value=\"notsorted\">Please select</option>\r\n\t\t    <option name=\"Ascending\" value=\"Ascending\">Ascending</option>\r\n\t\t    <option name=\"Descending\" value=\"Descending\">Descending</option>\r\n\t\t    </select>\t\r\n\t\t\t</div>\r\n\t\t\t);\r\n\t\t}\t\t\r\n\t}\r\n\r\nexport default OrderBy;","import React from 'react';\n\nconst listData = ({contacts, search}) => {\n    const filteredData = contacts.filter(\n    contacts => {\n    return contacts.name.toLowerCase().includes(search.toLowerCase()) ||\n    contacts.address.toLowerCase().includes(search.toLowerCase()) ||\n    contacts.phone_number.includes(search);\n    })\n\n    return (\n    <div>\n    {filteredData.map(contacts => \n        <ul className=\"gradient_text\" key={contacts.name}>\n        <li>Name: {contacts.name}</li>\n        <li>Phone: {contacts.phone_number}</li>\n        <li>Address: {contacts.address}</li>\n        <hr />\n        </ul>\n        )}    \n\n       </div>\n        \n        );\n      \n}\n\nexport default listData;\n","import React from 'react';\r\n\r\nconst filteredAndSorted = ({contacts, search, sortIt, sortBy, direction}) => {\r\n\tif (direction === 'Ascending') {\r\n\t\tlet filteredAndSortedData = \r\n\tcontacts\r\n    .sort((a, b) => { if(a.name < b.name) { return -1; } if(a.name > b.name) { return 1; } return 0; })\r\n    .filter(\r\n    contacts => {\r\n    return contacts.name.toLowerCase().includes(search.toLowerCase()) ||\r\n    contacts.address.toLowerCase().includes(search.toLowerCase()) ||\r\n    contacts.phone_number.includes(search);\r\n    })\r\n\t    return (\r\n\t    <div>\r\n\t    {filteredAndSortedData.map(contacts => \r\n\t        <ul className=\"gradient_text\" key={contacts.name}>\r\n\t        <li>Name: {contacts.name}</li>\r\n\t        <li>Phone: {contacts.phone_number}</li>\r\n\t        <li>Address: {contacts.address}</li>\r\n\t        <hr />\r\n\t        </ul>\r\n\t     )}    \r\n\t     </div>\r\n\t     );\r\n\t}\r\n\telse if (direction === 'Descending') {\r\n\t\tlet filteredAndSortedData = \r\n\tcontacts\r\n    .sort((a, b) => { if(a.name > b.name) { return -1; } if(a.name < b.name) { return 1; } return 0; })\r\n    .filter(\r\n    contacts => {\r\n    return contacts.name.toLowerCase().includes(search.toLowerCase()) ||\r\n    contacts.address.toLowerCase().includes(search.toLowerCase()) ||\r\n    contacts.phone_number.includes(search);\r\n    })\r\n\t    return (\r\n\t    <div>\r\n\t    {filteredAndSortedData.map(contacts => \r\n\t        <ul className=\"gradient_text\" key={contacts.name}>\r\n\t        <li>Name: {contacts.name}</li>\r\n\t        <li>Phone: {contacts.phone_number}</li>\r\n\t        <li>Address: {contacts.address}</li>\r\n\t        <hr />\r\n\t        </ul>\r\n\t     )}    \r\n\t     </div>\r\n\t     );\r\n\t}\r\n\t\r\n}\r\n      \r\nexport default filteredAndSorted;\r\n","import React, { Component } from 'react';\nimport SearchBox from './Components/SearchBox';\nimport OrderBy from './Components/OrderBy';\nimport './App.css';\nimport ListData from './Components/ListData';\nimport FilteredAndSorted from './Components/FilteredAndSorted';\nconst API = \"http://www.mocky.io/v2/581335f71000004204abaf83\";\n\nclass App extends Component {\n\n  constructor (props) {\n    super(props);\n    this.state = {\n    search: '',\n    contacts: [],\n    direction: 'notsorted'\n  }\n}\n\n  componentDidMount() {\n    fetch(API)\n      .then(response => response.json())\n      .then(data => this.setState({ contacts: data.contacts }))\n      .catch(error => console.log(error));\n    }  \n\n  filterContacts = (event) => {\n    const {contacts} = this.state;\n    this.setState({ search: event.target.value });\n  }\n\n  sortIt = (direction) => {\n   if ((direction) === 'Ascending') {\n    this.setState ({direction: 'Ascending'})\n   }\n   else if ((direction) === 'Descending') {\n    this.setState ({direction: 'Descending'})\n   }\n   else {\n    this.setState({direction: 'notsorted'})\n   }\n  }\n\n    render() {\n    const {contacts, search, direction} = this.state;\n    return (\n      <div className=\"App\">\n          <h1>Phonebook</h1>\n          <div className=\"container\">\n               <div className=\"row\">\n                  <div className=\"col\">\n                  <OrderBy sortIt={this.sortIt}/>\n                  {(direction === 'notsorted') ?\n                  <ListData contacts={contacts} search={search}/>\n                  :\n                  <FilteredAndSorted contacts={contacts} search={search} sortIt={this.sortIt}\n                  direction={direction}/>}\n                  </div>\n                   <div className=\"col\">\n                   <SearchBox filterContacts={this.filterContacts}/>\n                  </div>\n               </div>\n          </div>       \n       \n      </div>\n    );\n  }\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read http://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit http://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See http://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: http://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}